!2 Narrative
In order to ... As a platform I want to asynchronously handle set light requests

'''''NOTE: Authorisation is tested in Basic OSGP Functions - PBI119'''''

!2 Implemented Scenarios:
 * Set light on / off / dimmed
 * Set light on for unknown / unregistered device
 * Set light with invalid index -1, 7
 * Set light with invalid dimvalues -1, 0, 101
 * Set light off (on = false) with dimvalue 75
 * Set multiple lightvalues

NOTE: Scenario is not yet complete: For example, in case of an unknown device there will be no async response with correlationId...


!2 Scenario: Receive A Set Light Request With A Single Light Value
-| scenario | set light input values | device | | status | | index | | on | | dimvalue | | ismessagesent | | result || description |
|given|a set light request for device @device with index @index, on @on, and dimvalue @dimvalue                            |
|and  |the set light request refers to a device @device with status @status                                                |
|and  |the set light request refers to an organisation that is authorised                                                  |
|when |the set light request is received                                                                                   |
|then |the set light request should return an async response with a correlationId and deviceId @device                     |
|and  |a set light oslp message is sent to device @device should be @ismessagesent                                         |
|and  |an ovl set light result message with result @result and description @description should be sent to the ovl out queue|

-| set light input values |
|device   |status|index|on   |dimvalue|ismessagesent|result|description|
|device-01|active|     |true |        |true         |OK    |           |
|device-01|active|0    |true |        |true         |OK    |           |
|device-01|active|1    |true |        |true         |OK    |           |
|device-01|active|6    |true |        |true         |OK    |           |
|device-01|active|1    |false|        |true         |OK    |           |
|device-01|active|1    |true |1       |true         |OK    |           |
|device-01|active|1    |true |75      |true         |OK    |           |
|device-01|active|1    |true |100     |true         |OK    |           |

!2 Parameters:
 * device: device identification
 * status: active, unknown, unregistered, ???
 * index: optional integer (0-6)
 * on: boolean (true/false)
 * dimvalue: optional integer (1-100)
 * isgenerated: boolean (true/false) indicating whether a correlationID is generated
 * isqueued: boolean (true/false) indicating whether a message is added to the queue
 * result: OK (correlationID is returned) or exception


!2 Scenario: Receive A Set Light Request With An Invalid Single Light Value
-| scenario | set light input values | device | | status | | index | | on | | dimvalue | | ismessagesent | | result || description |
|given|a set light request for device @device with index @index, on @on, and dimvalue @dimvalue|
|and  |the set light request refers to a device @device with status @status                    |
|and  |the set light request refers to an organisation that is authorised                      |
|when |the set light request is received                                                       |
|then |the set light request should return a validation error                                  |
|and  |a set light oslp message is sent to device @device should be @ismessagesent             |

-| set light input values |
|device   |status|index|on   |dimvalue|ismessagesent|result|description     |
|device-01|active|1    |true |0       |false        |NOT OK|VALIDATION ERROR|
|device-01|active|-1   |true |1       |false        |NOT OK|VALIDATION ERROR|
|device-01|active|7    |true |1       |false        |NOT OK|VALIDATION ERROR|
|device-01|active|1    |true |-1      |false        |NOT OK|VALIDATION ERROR|
|device-01|active|1    |true |101     |false        |NOT OK|VALIDATION ERROR|
|device-01|active|1    |false|75      |false        |NOT OK|VALIDATION ERROR|

!2 Parameters:
 * device: device identification
 * status: active, unknown, unregistered, ???
 * index: optional integer (0-6)
 * on: boolean (true/false)
 * dimvalue: optional integer (1-100)
 * isgenerated: boolean (true/false) indicating whether a correlationID is generated
 * isqueued: boolean (true/false) indicating whether a message is added to the queue
 * result: OK (correlationID is returned) or exception


!2 Scenario: Receive A Get Set Light Response Request
-| scenario | get set light response input values | correlationid || deviceid || isfound || deviceid2 || qresult || qdescription || result || description|
|given|a get set light response request with correlationId @correlationid and deviceId @deviceid                                                                          |
|and  |a set light response message with correlationId @correlationid, deviceId @deviceid2, qresult @qresult and qdescription @qdescription is found in the queue @isfound|
|when |the get set light response request is received                                                                                                                     |
|then |the get set light response request should return a set light response with result @result and description @description                                             |

-| get set light response input values |
|correlationid|deviceid|isfound|deviceid2|qresult|qdescription    |result   |description     |
|cid-01       |dvc-01  |true   |dvc-01   |OK     |                |OK       |                |
|cid-02       |dvc-01  |false  |         |       |                |NOT_FOUND|                |
|cid-03       |dvc-01  |true   |dvc-01   |NOT_OK |VALIDATION ERROR|NOT_OK   |VALIDATION ERROR|

!2 Parameters:
 * correlationId: correlation Id returned from a set light request
 * content: message content
 * result: OK or exception


!2 Scenario: Receive A Set Light Request With Multiple Light Values
-| scenario | set multiple light values | device | | status | | validnr | | invalidnr | | ismessagesent | |  lightvaluenr | | result || description|
|given|a set light request for device @device with @validnr valid light values and @invalidnr invalid light values         |
|and  |the set light request refers to a device @device with status @status                                                |
|and  |the set light request refers to an organisation that is authorised                                                  |
|when |the set light request is received                                                                                   |
|then |the set light request should return an async response with a correlationId and deviceId @device                     |
|and  |a set light oslp message with @lightvaluenr light values is sent to device @device should be @ismessagesent         |
|and  |an ovl set light result message with result @result and description @description should be sent to the ovl out queue|


-| set multiple light values |
|device   |status|validnr|invalidnr|ismessagesent|lightvaluenr|result|description|
|device-01|active|1      |0        |true         |1           |OK    |           |
|device-01|active|6      |0        |true         |6           |OK    |           |

!2 Parameters:
 * device: device identification
 * status: active (not required here, but added for reusability of the given domainstep)
 * validnr: number of valid light values (valid range: 1 - 6)
 * invalidnr: number of invalid light values
 * isgenerated: boolean (true/false) indicating whether a correlationID is generated
 * isqueued: boolean (true/false) indicating whether a message is added to the queue
 * lightvaluenr: number of lightvalues
 * result: OK (correlationID is returned) or exception


!2 Scenario: Receive A Set Light Request With Invalid Multiple Light Values
-| scenario | set multiple light values | device | | status | | validnr | | invalidnr | | ismessagesent | |  lightvaluenr | | result || description|
|given|a set light request for device @device with @validnr valid light values and @invalidnr invalid light values|
|and  |the set light request refers to a device @device with status @status                                       |
|and  |the set light request refers to an organisation that is authorised                                         |
|when |the set light request is received                                                                          |
|then |the set light request should return a validation error                                                     |
|and  |a set light oslp message with @lightvaluenr light values is sent to device @device should be @ismessagesent|

-| set multiple light values |
|device   |status|validnr|invalidnr|ismessagesent|lightvaluenr|result|description     |
|device-01|active|0      |0        |false        |0           |NOT OK|VALIDATION ERROR|
|device-01|active|7      |0        |false        |0           |NOT OK|VALIDATION ERROR|
|device-01|active|1      |1        |false        |0           |NOT OK|VALIDATION ERROR|
|device-01|active|5      |1        |false        |0           |NOT OK|VALIDATION ERROR|

!2 Parameters:
 * device: device identification
 * status: active (not required here, but added for reusability of the given domainstep)
 * validnr: number of valid light values (valid range: 1 - 6)
 * invalidnr: number of invalid light values
 * isgenerated: boolean (true/false) indicating whether a correlationID is generated
 * isqueued: boolean (true/false) indicating whether a message is added to the queue
 * lightvaluenr: number of lightvalues
 * result: OK (correlationID is returned) or exception



