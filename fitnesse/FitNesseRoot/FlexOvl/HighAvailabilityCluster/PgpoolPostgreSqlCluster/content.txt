!2 Narrative
As OSGP we want the database servers to be redundant in order to achieve high availability.

!3 Description
Context:

- two (or more) postgresql databases.
- PGPOOL-II is a proxy for the (2 or more) postgresql databases.
- the databases and PGPOOL-II shall be called 'the cluster'.
- within the cluster, one postgresql database is the master. the others are slave(s). the slaves can be hot-standby, but it doesn't have to be like that.
- OSGP connects to PGPOOL-II.



\######################################################################
\## SERVER ALWAYS UP - The test servers stay up, no rebooting.
\######################################################################

REPLICATION

Start scenario:

- master database is up and running.
- slave(s) is/are not up and running and are replicating from the master.
- OSGP can read and write from/to the cluster.

!2 Scenario 1: Master server is up and running:
|given|the master dabase is up and running.            |
|and  |there is no slave up and running (yet).         |
|when |the slave starts.                               |
|then |replication from master to slave should start.  |
|and  |the master slave pair is performing as expected.|



PGPOOL-II (one instance of PGPOOL-II), normal use

Start scenario:

- PGPOOL-II is up and running.
- master is up and running.
- slave(s) is/are up and running and are replicating from the master.
- OSGP can read and write from/to the cluster.

!2 Scenario 2: Happy flow, nothing fails:
|given|the cluster is up and running.        |
|and  |the OSGP is connected to the cluster. |
|when |none of the databases fail.           |
|and  |PGPOOL-II doesn't fail.               |
|and  |the OSGP can read from the cluster.   |
|and  |the OSGP can write to the cluster.    |
|then |the cluster is performing as expected.|

!2 Scenario 3: Failover (automatic) flow:
|given|the cluster is up and running.                |
|and  |the OSGP is connected to the cluster.         |
|when |the master fails (goes down/process dies).    |
|and  |the slave is connected to the master.         |
|then |PGPOOL-II will notice the failing master.     |
|and  |PGPOOL-II will execute 'failover'.            |
|and  |the slave will become the new master.         |
|and  |the old master will not start again/stay down.|

!2 Scenario 4: Failover (manual) flow:
|given|the cluster is up and running.                  |
|and  |the OSGP is connected to the cluster.           |
|when |a user issues the 'promote' command for a slave.|
|and  |the slave is connected to the master.           |
|then |the slave will become the new master.           |
|and  |PGPOOL-II will disconnect from the old master.  |

!2 Scenario 5: Recover slave (manual) flow:
|given|the cluster is running after 'failover'.               |
|and  |the new master is up and running.                      |
|and  |the old master is down.                                |
|and  |the OSGP is connected to the cluster.                  |
|when |a user issues the 'recover' command for the old master.|
|then |the old master will be deleted.                        |
|and  |a backup is created from the new master.               |
|and  |the backup is copied to create a new slave.            |
|and  |and the new slave starts replicating the new master.   |

!2 Scenario 6: Failback flow (automatic failover followed by automatic recovery):
|given|the cluster is up and running.                      |
|and  |the OSGP is connected to the cluster.               |
|when |the master fails (goes down/process dies).          |
|and  |the slave is connected to the master.               |
|then |PGPOOL-II will notice the failing master.           |
|and  |PGPOOL-II will execute 'failover'.                  |
|and  |the slave will become the new master.               |
|and  |the old master will not start again/stay down.      |
|and  |the old master will be deleted.                     |
|and  |a backup is created from the new master.            |
|and  |the backup is copied to create a new slave.         |
|and  |and the new slave starts replicating the new master.|



PGPOOL-II (one instance of PGPOOL-II), load test

Start scenario:

- PGPOOL-II is up and running.
- master is up and running.
- slave(s) is/are up and running and are replicating from the master.
- OSGP can read and write from/to the cluster.

!2 Scenario 7: Happy flow, nothing fails:
|given|the cluster is up and running.                                |
|and  |the OSGP is connected to the cluster.                         |
|and  |continuous inserting/updating/selecting/deleting is performed.|
|when |none of the databases fail.                                   |
|and  |PGPOOL-II doesn't fail.                                       |
|and  |the OSGP can read from the cluster.                           |
|and  |the OSGP can write to the cluster.                            |
|then |the cluster is performing as expected.                        |

!2 Scenario 8: Failover (automatic) flow:
|given|the cluster is up and running.                                |
|and  |the OSGP is connected to the cluster.                         |
|and  |continuous inserting/updating/selecting/deleting is performed.|
|when |the master fails (goes down/process dies).                    |
|and  |the slave is connected to the master.                         |
|then |PGPOOL-II will notice the failing master.                     |
|and  |PGPOOL-II will execute 'failover'.                            |
|and  |the slave will become the new master.                         |
|and  |the old master will not start again/stay down.                |

!2 Scenario 9: Failover (manual) flow:
|given|the cluster is up and running.                                |
|and  |the OSGP is connected to the cluster.                         |
|and  |continuous inserting/updating/selecting/deleting is performed.|
|when |a user issues the 'promote' command for a slave.              |
|and  |the slave is connected to the master.                         |
|then |the slave will become the new master.                         |
|and  |PGPOOL-II will disconnect from the old master.                |

!2 Scenario 10: Recover slave (manual) flow:
|given|the cluster is running after 'failover'.                      |
|and  |the new master is up and running.                             |
|and  |the old master is down.                                       |
|and  |the OSGP is connected to the cluster.                         |
|and  |continuous inserting/updating/selecting/deleting is performed.|
|when |a user issues the 'recover' command for the old master.       |
|then |the old master will be deleted.                               |
|and  |a backup is created from the new master.                      |
|and  |the backup is copied to create a new slave.                   |
|and  |and the new slave starts replicating the new master.          |

!2 Scenario 11: Failback flow (automatic failover followed by automatic recovery):
|given|the cluster is up and running.                                |
|and  |the OSGP is connected to the cluster.                         |
|and  |continuous inserting/updating/selecting/deleting is performed.|
|when |the master fails (goes down/process dies).                    |
|and  |the slave is connected to the master.                         |
|then |PGPOOL-II will notice the failing master.                     |
|and  |PGPOOL-II will execute 'failover'.                            |
|and  |the slave will become the new master.                         |
|and  |the old master will not start again/stay down.                |
|and  |the old master will be deleted.                               |
|and  |a backup is created from the new master.                      |
|and  |the backup is copied to create a new slave.                   |
|and  |and the new slave starts replicating the new master.          |



PGPOOL-II (two instances of PGPOOL-II), normal use

Start scenario:

- PGPOOL-II is up and running.
- master is up and running.
- slave(s) is/are up and running and are replicating from the master.
- OSGP can read and write from/to the cluster.

!2 Scenario 12: Happy flow, nothing fails:
|given|the cluster is up and running.        |
|and  |the OSGP is connected to the cluster. |
|when |none of the databases fail.           |
|and  |PGPOOL-II doesn't fail.               |
|and  |the OSGP can read from the cluster.   |
|and  |the OSGP can write to the cluster.    |
|then |the cluster is performing as expected.|

!2 Scenario 13: Failover (automatic) flow:
|given|the cluster is up and running.                |
|and  |the OSGP is connected to the cluster.         |
|when |the master fails (goes down/process dies).    |
|and  |the slave is connected to the master.         |
|then |PGPOOL-II will notice the failing master.     |
|and  |PGPOOL-II will execute 'failover'.            |
|and  |the slave will become the new master.         |
|and  |the old master will not start again/stay down.|

!2 Scenario 14: Failover (manual) flow:
|given|the cluster is up and running.                  |
|and  |the OSGP is connected to the cluster.           |
|when |a user issues the 'promote' command for a slave.|
|and  |the slave is connected to the master.           |
|then |the slave will become the new master.           |
|and  |PGPOOL-II will disconnect from the old master.  |

!2 Scenario 15: Recover slave (manual) flow:
|given|the cluster is running after 'failover'.               |
|and  |the new master is up and running.                      |
|and  |the old master is down.                                |
|and  |the OSGP is connected to the cluster.                  |
|when |a user issues the 'recover' command for the old master.|
|then |the old master will be deleted.                        |
|and  |a backup is created from the new master.               |
|and  |the backup is copied to create a new slave.            |
|and  |and the new slave starts replicating the new master.   |

!2 Scenario 16: Failback flow (automatic failover followed by automatic recovery):
|given|the cluster is up and running.                      |
|and  |the OSGP is connected to the cluster.               |
|when |the master fails (goes down/process dies).          |
|and  |the slave is connected to the master.               |
|then |PGPOOL-II will notice the failing master.           |
|and  |PGPOOL-II will execute 'failover'.                  |
|and  |the slave will become the new master.               |
|and  |the old master will not start again/stay down.      |
|and  |the old master will be deleted.                     |
|and  |a backup is created from the new master.            |
|and  |the backup is copied to create a new slave.         |
|and  |and the new slave starts replicating the new master.|

!2 Scenario 17: One PGPOOL-II instance fails:
|given|the cluster is up and running.                                                  |
|and  |the OSGP is connected to the cluster.                                           |
|when |one PGPOOL-II instance fails (goes down/process dies).                          |
|then |the other standby PGPOOL-II instance should become the active PGPOOL-II instance|
|and  |the new active PGPOOL-II instance should obtain the Virtal IP address           |



PGPOOL-II (two instances of PGPOOL-II), load test

Start scenario:

- PGPOOL-II is up and running.
- master is up and running.
- slave(s) is/are up and running and are replicating from the master.
- OSGP can read and write from/to the cluster.

!2 Scenario 18: Happy flow, nothing fails:
|given|the cluster is up and running.                                |
|and  |the OSGP is connected to the cluster.                         |
|and  |continuous inserting/updating/selecting/deleting is performed.|
|when |none of the databases fail.                                   |
|and  |PGPOOL-II doesn't fail.                                       |
|and  |the OSGP can read from the cluster.                           |
|and  |the OSGP can write to the cluster.                            |
|then |the cluster is performing as expected.                        |

!2 Scenario 19: Failover (automatic) flow:
|given|the cluster is up and running.                                |
|and  |the OSGP is connected to the cluster.                         |
|and  |continuous inserting/updating/selecting/deleting is performed.|
|when |the master fails (goes down/process dies).                    |
|and  |the slave is connected to the master.                         |
|then |PGPOOL-II will notice the failing master.                     |
|and  |PGPOOL-II will execute 'failover'.                            |
|and  |the slave will become the new master.                         |
|and  |the old master will not start again/stay down.                |

!2 Scenario 20: Failover (manual) flow:
|given|the cluster is up and running.                                |
|and  |the OSGP is connected to the cluster.                         |
|and  |continuous inserting/updating/selecting/deleting is performed.|
|when |a user issues the 'promote' command for a slave.              |
|and  |the slave is connected to the master.                         |
|then |the slave will become the new master.                         |
|and  |PGPOOL-II will disconnect from the old master.                |

!2 Scenario 21: Recover slave (manual) flow:
|given|the cluster is running after 'failover'.                      |
|and  |the new master is up and running.                             |
|and  |the old master is down.                                       |
|and  |the OSGP is connected to the cluster.                         |
|and  |continuous inserting/updating/selecting/deleting is performed.|
|when |a user issues the 'recover' command for the old master.       |
|then |the old master will be deleted.                               |
|and  |a backup is created from the new master.                      |
|and  |the backup is copied to create a new slave.                   |
|and  |and the new slave starts replicating the new master.          |

!2 Scenario 22: Failback flow (automatic failover followed by automatic recovery):
|given|the cluster is up and running.                                |
|and  |the OSGP is connected to the cluster.                         |
|and  |continuous inserting/updating/selecting/deleting is performed.|
|when |the master fails (goes down/process dies).                    |
|and  |the slave is connected to the master.                         |
|then |PGPOOL-II will notice the failing master.                     |
|and  |PGPOOL-II will execute 'failover'.                            |
|and  |the slave will become the new master.                         |
|and  |the old master will not start again/stay down.                |
|and  |the old master will be deleted.                               |
|and  |a backup is created from the new master.                      |
|and  |the backup is copied to create a new slave.                   |
|and  |and the new slave starts replicating the new master.          |




\######################################################################
\## SERVER FAILURE - Test servers fail or reboot.
\######################################################################

REPLICATION

Start scenario:

- master database is up and running.
- slave(s) is/are not up and running and are replicating from the master.
- OSGP can read and write from/to the cluster.

#TODO


PGPOOL-II (one instance of PGPOOL-II), normal use

Start scenario:

- PGPOOL-II is up and running.
- master is up and running.
- slave(s) is/are up and running and are replicating from the master.
- OSGP can read and write from/to the cluster.

#TODO


PGPOOL-II (one instance of PGPOOL-II), load test

Start scenario:

- PGPOOL-II is up and running.
- master is up and running.
- slave(s) is/are up and running and are replicating from the master.
- OSGP can read and write from/to the cluster.

#TODO


PGPOOL-II (two instances of PGPOOL-II), normal use

Start scenario:

- PGPOOL-II is up and running.
- master is up and running.
- slave(s) is/are up and running and are replicating from the master.
- OSGP can read and write from/to the cluster.

#TODO


PGPOOL-II (two instances of PGPOOL-II), load test

Start scenario:

- PGPOOL-II is up and running.
- master is up and running.
- slave(s) is/are up and running and are replicating from the master.
- OSGP can read and write from/to the cluster.

#TODO



