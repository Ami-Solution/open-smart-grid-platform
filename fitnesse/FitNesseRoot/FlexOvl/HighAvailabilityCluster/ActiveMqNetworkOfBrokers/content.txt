!2 Narrative
As OSGP I want an ActiveMQ Cluster in order to achieve high availability.

!3 Description
Two ActiveMQ instances, broker1 and broker2 are running on two servers, server1 and server2. 
The two brokers are connected to each other in a Network of Brokers.
There can be many producers of messages, who connect to one of the brokers to enqueue messages.
There can be many consumers of messages, who connect to one of the brokers to dequeue messages.
The connection(s) between the brokers ensures that consumer1 can get messages from broker1, even though the messages were sent to broker2 by producer1.
ActiveMQ ensures that a single message can never be dequeued by more than one consumer, regardless of the topology of the Network of Brokers.

!2 Scenario: producer1 enqueues messages with broker1, consumer1 dequeues messages from broker1
|given|broker1 and broker2 are up and running                                     |
|and  |both brokers have a network connection to the other broker                 |
|when |producer1 enqueues messages with broker1                                   |
|then |consumer1 dequeues messages from broker1                                   |
|and  |the number of enqueued messages is equal to the number of dequeued messages|

!2 Scenario: producer1 enqueues messages with broker1, consumer1 dequeues messages from broker2
|given|broker1 and broker2 are up and running                                     |
|and  |both brokers have a network connection to the other broker                 |
|when |producer1 enqueues messages with broker1                                   |
|then |consumer1 dequeues messages from broker2                                   |
|and  |the number of enqueued messages is equal to the number of dequeued messages|

!2 Scenario: producer1 enqueues messages with broker2, consumer1 dequeues messages from broker2
|given|broker1 and broker2 are up and running                                     |
|and  |both brokers have a network connection to the other broker                 |
|when |producer1 enqueues messages with broker2                                   |
|then |consumer1 dequeues messages from broker2                                   |
|and  |the number of enqueued messages is equal to the number of dequeued messages|

!2 Scenario: producer1 enqueues messages with broker2, consumer1 dequeues messages from broker1
|given|broker1 and broker2 are up and running                                     |
|and  |both brokers have a network connection to the other broker                 |
|when |producer1 enqueues messages with broker2                                   |
|then |consumer1 dequeues messages from broker1                                   |
|and  |the number of enqueued messages is equal to the number of dequeued messages|

!2 Scenario: producer1 enqueues messages with broker2, broker2 goes down and comes back up, then consumer1 dequeues messages from broker1
|given|broker1 and broker2 are up and running                                     |
|and  |both brokers have a network connection to the other broker                 |
|when |producer1 enqueues messages with broker2                                   |
|and  |broker2 goes down                                                          |
|then |broker2 will come back up at some point  in time                           |
|and  |consumer1 dequeues messages from broker1                                   |
|and  |the number of enqueued messages is equal to the number of dequeued messages|

!2 Scenario: producer1 enqueues messages with broker1, broker1 goes down and comes back up, then consumer1 dequeues messages from broker2
|given|broker1 and broker2 are up and running                                     |
|and  |both brokers have a network connection to the other broker                 |
|when |producer1 enqueues messages with broker1                                   |
|and  |broker1 goes down                                                          |
|then |broker1 will come back up at some point  in time                           |
|and  |consumer1 dequeues messages from broker2                                   |
|and  |the number of enqueued messages is equal to the number of dequeued messages|

!2 Scenario: producer1 enqueues messages with broker1, consumer1 to consumerN dequeues message from broker1
|given|broker1 and broker2 are up and running                                     |
|and  |both brokers have a network connection to the other broker                 |
|when |producer1 enqueues messages with broker1                                   |
|then |consumer1 dequeues messages from broker1                                   |
|and  |consumer2 to consumerN dequeue messages from broker1                       |
|and  |the number of enqueued messages is equal to the number of dequeued messages|

!2 Scenario: producer1 enqueues messages with broker1, consumer1 to consumerN dequeues message from broker2
|given|broker1 and broker2 are up and running                                     |
|and  |both brokers have a network connection to the other broker                 |
|when |producer1 enqueues messages with broker1                                   |
|then |consumer1 dequeues messages from broker2                                   |
|and  |consumer2 to consumerN dequeue messages from broker2                       |
|and  |the number of enqueued messages is equal to the number of dequeued messages|

!2 Scenario: producer1 enqueues messages with broker1, consumer1 dequeues messages from broker1 and consumer2 to consumerN dequeue messages from broker2
|given|broker1 and broker2 are up and running                                     |
|and  |both brokers have a network connection to the other broker                 |
|when |producer1 enqueues messages with broker1                                   |
|then |consumer1 dequeues messages from broker1                                   |
|and  |consumer2 to consumerN dequeue messages from broker2                       |
|and  |the number of enqueued messages is equal to the number of dequeued messages|

!2 Scenario: producer1 enqueues messages with broker2, consumer1 dequeues messages from broker1 and consumer2 to consumerN dequeue messages from broker2
|given|broker1 and broker2 are up and running                                     |
|and  |both brokers have a network connection to the other broker                 |
|when |producer1 enqueues messages with broker2                                   |
|then |consumer1 dequeues messages from broker1                                   |
|and  |consumer2 to consumerN dequeue messages from broker2                       |
|and  |the number of enqueued messages is equal to the number of dequeued messages|
