<?xml version="1.0"?>
<testResults>
  <FitNesseVersion>v20121203</FitNesseVersion>
  <rootPath>FindDevices</rootPath>
    <result>
    <counts>
      <right>0</right>
      <wrong>0</wrong>
      <ignores>1</ignores>
      <exceptions>13</exceptions>
    </counts>
    <runTimeInMillis>650</runTimeInMillis>
    <content><![CDATA[<div class="collapsible closed"><ul><li><a href='#' class='expandall'>Expand All</a></li><li><a href='#' class='collapseall'>Collapse All</a></li></ul>
	<p class="title">Precompiled Libraries</p>
	<div><br/></div>
</div>
<br/><div class="collapsible closed"><ul><li><a href='#' class='expandall'>Expand All</a></li><li><a href='#' class='collapseall'>Collapse All</a></li></ul>
	<p class="title">Included page: <a href="FlexOvl.DeviceManagement.SetUp">.FlexOvl.DeviceManagement.SetUp</a> <a href="FlexOvl.DeviceManagement.SetUp?edit&amp;redirectToReferer=true&amp;redirectAction=" class="edit">(edit)</a></p>
	<div><table _TABLENUMBER=3318177316319925191>
	<tr>
		<td>import</td>
	</tr>
	<tr>
		<td>com.alliander.osgp.acceptancetests</td>
	</tr>
</table>
<br/><div id="test_exceptions13"><H3> <span class="fail">Exceptions</span></H3><br/><a name="scriptTable_1_0"><b></b></a><div class="collapsible closed"><ul><li><a href='#' class='expandall'>Expand All</a></li><li><a href='#' class='collapseall'>Collapse All</a></li></ul>
	<p class="title">scriptTable_1_0</p>
	<div><pre>__EXCEPTION__:java.lang.reflect.InvocationTargetException
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at fitnesse.slim.fixtureInteraction.DefaultInteraction.newInstance(DefaultInteraction.java:11)
	at fitnesse.slim.StatementExecutor.newInstance(StatementExecutor.java:170)
	at fitnesse.slim.StatementExecutor.createInstanceOfConstructor(StatementExecutor.java:153)
	at fitnesse.slim.StatementExecutor.create(StatementExecutor.java:95)
	at fitnesse.slim.Statement.createInstance(Statement.java:93)
	at fitnesse.slim.Statement.execute(Statement.java:73)
	at fitnesse.slim.ListExecutor$Executive.executeStatement(ListExecutor.java:44)
	at fitnesse.slim.ListExecutor$Executive.executeStatements(ListExecutor.java:39)
	at fitnesse.slim.ListExecutor.execute(ListExecutor.java:71)
	at fitnesse.slim.SlimServer.executeInstructions(SlimServer.java:81)
	at fitnesse.slim.SlimServer.processTheInstructions(SlimServer.java:73)
	at fitnesse.slim.SlimServer.processOneSetOfInstructions(SlimServer.java:57)
	at fitnesse.slim.SlimServer.tryProcessInstructions(SlimServer.java:43)
	at fitnesse.slim.SlimServer.serve(SlimServer.java:30)
	at fitnesse.socketservice.SocketService$ServerRunner.run(SocketService.java:109)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'taskSchedulerTerminator': Injection of autowired dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Could not autowire field: private org.springframework.scheduling.TaskScheduler com.alliander.osgp.core.application.tasks.TaskSchedulerTerminator.taskScheduler; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type [org.springframework.scheduling.TaskScheduler] found for dependency: expected at least 1 bean which qualifies as autowire candidate for this dependency. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:289)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1147)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:519)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:293)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:223)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:290)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:191)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:633)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:932)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:479)
	at com.alliander.osgp.acceptancetests.ScopedGivWenZenForSlim.autowireStepDefinitionClassesWithSpring(ScopedGivWenZenForSlim.java:49)
	at com.alliander.osgp.acceptancetests.ScopedGivWenZenForSlim.&lt;init&gt;(ScopedGivWenZenForSlim.java:67)
	... 20 more
Caused by: org.springframework.beans.factory.BeanCreationException: Could not autowire field: private org.springframework.scheduling.TaskScheduler com.alliander.osgp.core.application.tasks.TaskSchedulerTerminator.taskScheduler; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type [org.springframework.scheduling.TaskScheduler] found for dependency: expected at least 1 bean which qualifies as autowire candidate for this dependency. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:517)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:87)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:286)
	... 32 more
Caused by: org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type [org.springframework.scheduling.TaskScheduler] found for dependency: expected at least 1 bean which qualifies as autowire candidate for this dependency. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.raiseNoSuchBeanDefinitionException(DefaultListableBeanFactory.java:993)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:863)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:775)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:489)
	... 34 more
</pre></div>
</div>
</div><hr/><table _TABLENUMBER=5884565552130775342>
	<tr>
		<td colspan="3">script</td>
	</tr>
	<tr>
		<td>start</td>
		<td>!style_error(Unknown construction message:) Exception: <a href=#scriptTable_1_0>scriptTable_1_0</a></td>
		<td>devicemanagement <span class="ignore">Test not run</span></td>
	</tr>
</table>
<br/></div>
</div>
<br/><h2>Narrative</h2>
<br/>In order to offer the possibility to test a device<br/>As an OSGP<br/>I want to make sure a list of recently installed devices can be retrieved <br/><br/><h2>Scenario: Find devices parameterized</h2>
<table _TABLENUMBER=5829097047464119357>
	<tr class="hidden">
		<td>scenario</td>
		<td>example</td>
		<td>device</td>
		<td></td>
		<td>ownerid</td>
		<td></td>
		<td>ownername</td>
		<td></td>
		<td>pagesize</td>
		<td></td>
		<td>page</td>
		<td></td>
		<td>number</td>
	</tr>
	<tr>
		<td>given</td>
		<td colspan="12">a valid find devices request with pageSize @pagesize and page @page</td>
	</tr>
	<tr>
		<td>and</td>
		<td colspan="12">a device @device with ownerid @ownerid and ownername @ownername</td>
	</tr>
	<tr>
		<td>when</td>
		<td colspan="12">the find devices request is received</td>
	</tr>
	<tr>
		<td>then</td>
		<td colspan="12">the find devices request should return a find devices response</td>
	</tr>
	<tr>
		<td>and</td>
		<td colspan="12">the find devices response should contain @number device</td>
	</tr>
	<tr>
		<td>and</td>
		<td colspan="12">the device in the response matches device @device</td>
	</tr>
</table>
<br/><table _TABLENUMBER=8786450306728677398>
	<tr class="hidden">
		<td colspan="6">example</td>
	</tr>
	<tr>
		<td>device</td>
		<td>ownerid</td>
		<td>ownername</td>
		<td>pagesize</td>
		<td>page</td>
		<td>number</td>
	</tr>
	<tr class="scenario closed">
		<td class="error">device1</td>
		<td class="error">GemeenteHeerlen<a title="create page" href="FlexOvl.DeviceManagement.GemeenteHeerlen?edit&nonExistent=true">[?]</a></td>
		<td class="error">Gemeente Heerlen</td>
		<td class="error">25</td>
		<td class="error">0</td>
		<td class="error">1</td>
	</tr><tr class="scenario-detail"><td colspan="6"><table _TABLENUMBER=9160661352592242171 table_name="decisionTable_3_0/scriptTable_2">
	<tr class="hidden">
		<td>scenario</td>
		<td>example</td>
		<td>device</td>
		<td></td>
		<td>ownerid</td>
		<td></td>
		<td>ownername</td>
		<td></td>
		<td>pagesize</td>
		<td></td>
		<td>page</td>
		<td></td>
		<td>number</td>
	</tr>
	<tr>
		<td>given <span class="error">The instance scriptTableActor.given. does not exist</span></td>
		<td colspan="12">a valid find devices request with pageSize 25 and page 0</td>
	</tr>
	<tr>
		<td>and <span class="error">The instance scriptTableActor.and. does not exist</span></td>
		<td colspan="12">a device device1 with ownerid GemeenteHeerlen<a title="create page" href="FlexOvl.DeviceManagement.GemeenteHeerlen?edit&nonExistent=true">[?]</a> and ownername Gemeente Heerlen</td>
	</tr>
	<tr>
		<td>when <span class="error">The instance scriptTableActor.when. does not exist</span></td>
		<td colspan="12">the find devices request is received</td>
	</tr>
	<tr>
		<td>then <span class="error">The instance scriptTableActor.then. does not exist</span></td>
		<td colspan="12">the find devices request should return a find devices response</td>
	</tr>
	<tr>
		<td>and <span class="error">The instance scriptTableActor.and. does not exist</span></td>
		<td colspan="12">the find devices response should contain 1 device</td>
	</tr>
	<tr>
		<td>and <span class="error">The instance scriptTableActor.and. does not exist</span></td>
		<td colspan="12">the device in the response matches device device1</td>
	</tr>
</table></td></tr>
</table>
<br/><br/><br/><br/><div class="collapsible closed"><ul><li><a href='#' class='expandall'>Expand All</a></li><li><a href='#' class='collapseall'>Collapse All</a></li></ul>
	<p class="title">Included page: <a href="FlexOvl.DeviceManagement.TearDown">.FlexOvl.DeviceManagement.TearDown</a> <a href="FlexOvl.DeviceManagement.TearDown?edit&amp;redirectToReferer=true&amp;redirectAction=" class="edit">(edit)</a></p>
	<div><table _TABLENUMBER=3050385156637188640>
	<tr>
		<td>import</td>
	</tr>
	<tr>
		<td>com.alliander.osgp.acceptancetests</td>
	</tr>
</table>
<br/><table _TABLENUMBER=5885800063149600505>
	<tr>
		<td><span class="pass">spring context closure</span></td>
	</tr>
</table>
</div>
</div>
<br/>]]></content>
    <relativePageName>FindDevices</relativePageName>
        <tags>PBI 64</tags>
    
        <tables>
            <table>
        <name>import_0</name>
                <row>
                    <col><![CDATA[import]]></col>
          
        </row>
                <row>
                    <col><![CDATA[com.alliander.osgp.acceptancetests]]></col>
          
        </row>
        
      </table>
            <table>
        <name>scriptTable_1</name>
                <row>
                    <col><![CDATA[script]]></col>
          
        </row>
                <row>
                    <col><![CDATA[start]]></col>
                    <col><![CDATA[!style_error(Unknown construction message:) Exception: <a href=#scriptTable_1_0>scriptTable_1_0</a>]]></col>
                    <col><![CDATA[devicemanagement ignore(Test not run)]]></col>
          
        </row>
        
      </table>
            <table>
        <name>scenarioTable_2</name>
                <row>
                    <col><![CDATA[scenario]]></col>
                    <col><![CDATA[example]]></col>
                    <col><![CDATA[device]]></col>
                    <col><![CDATA[]]></col>
                    <col><![CDATA[ownerid]]></col>
                    <col><![CDATA[]]></col>
                    <col><![CDATA[ownername]]></col>
                    <col><![CDATA[]]></col>
                    <col><![CDATA[pagesize]]></col>
                    <col><![CDATA[]]></col>
                    <col><![CDATA[page]]></col>
                    <col><![CDATA[]]></col>
                    <col><![CDATA[number]]></col>
          
        </row>
                <row>
                    <col><![CDATA[given]]></col>
                    <col><![CDATA[a valid find devices request with pageSize @pagesize and page @page]]></col>
          
        </row>
                <row>
                    <col><![CDATA[and]]></col>
                    <col><![CDATA[a device @device with ownerid @ownerid and ownername @ownername]]></col>
          
        </row>
                <row>
                    <col><![CDATA[when]]></col>
                    <col><![CDATA[the find devices request is received]]></col>
          
        </row>
                <row>
                    <col><![CDATA[then]]></col>
                    <col><![CDATA[the find devices request should return a find devices response]]></col>
          
        </row>
                <row>
                    <col><![CDATA[and]]></col>
                    <col><![CDATA[the find devices response should contain @number device]]></col>
          
        </row>
                <row>
                    <col><![CDATA[and]]></col>
                    <col><![CDATA[the device in the response matches device @device]]></col>
          
        </row>
        
      </table>
            <table>
        <name>decisionTable_3</name>
                <row>
                    <col><![CDATA[example]]></col>
          
        </row>
                <row>
                    <col><![CDATA[device]]></col>
                    <col><![CDATA[ownerid]]></col>
                    <col><![CDATA[ownername]]></col>
                    <col><![CDATA[pagesize]]></col>
                    <col><![CDATA[page]]></col>
                    <col><![CDATA[number]]></col>
          
        </row>
                <row>
                    <col><![CDATA[device1]]></col>
                    <col><![CDATA[GemeenteHeerlen<a title="create page" href="FlexOvl.DeviceManagement.GemeenteHeerlen?edit&nonExistent=true">[?]</a>]]></col>
                    <col><![CDATA[Gemeente Heerlen]]></col>
                    <col><![CDATA[25]]></col>
                    <col><![CDATA[0]]></col>
                    <col><![CDATA[1]]></col>
          
        </row>
        
      </table>
            <table>
        <name>decisionTable_3_0/scriptTable_2</name>
                <row>
                    <col><![CDATA[scenario]]></col>
                    <col><![CDATA[example]]></col>
                    <col><![CDATA[device]]></col>
                    <col><![CDATA[]]></col>
                    <col><![CDATA[ownerid]]></col>
                    <col><![CDATA[]]></col>
                    <col><![CDATA[ownername]]></col>
                    <col><![CDATA[]]></col>
                    <col><![CDATA[pagesize]]></col>
                    <col><![CDATA[]]></col>
                    <col><![CDATA[page]]></col>
                    <col><![CDATA[]]></col>
                    <col><![CDATA[number]]></col>
          
        </row>
                <row>
                    <col><![CDATA[given error(The instance scriptTableActor.given. does not exist)]]></col>
                    <col><![CDATA[a valid find devices request with pageSize 25 and page 0]]></col>
          
        </row>
                <row>
                    <col><![CDATA[and error(The instance scriptTableActor.and. does not exist)]]></col>
                    <col><![CDATA[a device device1 with ownerid GemeenteHeerlen<a title="create page" href="FlexOvl.DeviceManagement.GemeenteHeerlen?edit&nonExistent=true">[?]</a> and ownername Gemeente Heerlen]]></col>
          
        </row>
                <row>
                    <col><![CDATA[when error(The instance scriptTableActor.when. does not exist)]]></col>
                    <col><![CDATA[the find devices request is received]]></col>
          
        </row>
                <row>
                    <col><![CDATA[then error(The instance scriptTableActor.then. does not exist)]]></col>
                    <col><![CDATA[the find devices request should return a find devices response]]></col>
          
        </row>
                <row>
                    <col><![CDATA[and error(The instance scriptTableActor.and. does not exist)]]></col>
                    <col><![CDATA[the find devices response should contain 1 device]]></col>
          
        </row>
                <row>
                    <col><![CDATA[and error(The instance scriptTableActor.and. does not exist)]]></col>
                    <col><![CDATA[the device in the response matches device device1]]></col>
          
        </row>
        
      </table>
            <table>
        <name>import_4</name>
                <row>
                    <col><![CDATA[import]]></col>
          
        </row>
                <row>
                    <col><![CDATA[com.alliander.osgp.acceptancetests]]></col>
          
        </row>
        
      </table>
            <table>
        <name>decisionTable_5</name>
                <row>
                    <col><![CDATA[pass(spring context closure)]]></col>
          
        </row>
        
      </table>
      
    </tables>
    
    
    <instructions>
            <instructionResult>
        <instruction><![CDATA[[import_0_0, import, com.alliander.osgp.acceptancetests]]]></instruction>
        <slimResult><![CDATA[OK]]></slimResult>
        
      </instructionResult>
            <instructionResult>
        <instruction><![CDATA[[scriptTable_1_0, make, scriptTableActor, ScopedGivWenZenForSlim, devicemanagement]]]></instruction>
        <slimResult><![CDATA[Exception: <a href=#scriptTable_1_0>scriptTable_1_0</a>]]></slimResult>
                <expectation>
          <status>ignored</status>
          <instructionId>scriptTable_1_0</instructionId>
          <col>1</col>
          <row>1</row>
          <type>ConstructionExpectation</type>
                    <actual><![CDATA[Exception: <a href=#scriptTable_1_0>scriptTable_1_0</a>]]></actual>
                              <expected><![CDATA[scoped giv wen zen for slim]]></expected>
                              <evaluationMessage><![CDATA[!style_error(Unknown construction message:) Exception: <a href=#scriptTable_1_0>scriptTable_1_0</a>]]></evaluationMessage>
                  </expectation>
        
      </instructionResult>
            <instructionResult>
        <instruction><![CDATA[[decisionTable_3_0/scriptTable_2_0, call, scriptTableActor, given, a valid find devices request with pageSize 25 and page 0]]]></instruction>
        <slimResult><![CDATA[!error:The instance scriptTableActor.given. does not exist]]></slimResult>
                <expectation>
          <status>ignored</status>
          <instructionId>decisionTable_3_0/scriptTable_2_0</instructionId>
          <col>1</col>
          <row>1</row>
          <type>ArgumentExpectation</type>
                                        <evaluationMessage><![CDATA[]]></evaluationMessage>
                  </expectation>
                <expectation>
          <status>ignored</status>
          <instructionId>decisionTable_3_0/scriptTable_2_0</instructionId>
          <col>0</col>
          <row>1</row>
          <type>ScriptActionExpectation</type>
                    <actual><![CDATA[!error:The instance scriptTableActor.given. does not exist]]></actual>
                              <expected><![CDATA[given]]></expected>
                              <evaluationMessage><![CDATA[given error(The instance scriptTableActor.given. does not exist)]]></evaluationMessage>
                  </expectation>
        
      </instructionResult>
            <instructionResult>
        <instruction><![CDATA[[decisionTable_3_0/scriptTable_2_1, call, scriptTableActor, and, a device device1 with ownerid GemeenteHeerlen<a title="create page" href="FlexOvl.DeviceManagement.GemeenteHeerlen?edit&nonExistent=true">[?]</a> and ownername Gemeente Heerlen]]]></instruction>
        <slimResult><![CDATA[!error:The instance scriptTableActor.and. does not exist]]></slimResult>
                <expectation>
          <status>ignored</status>
          <instructionId>decisionTable_3_0/scriptTable_2_1</instructionId>
          <col>1</col>
          <row>2</row>
          <type>ArgumentExpectation</type>
                                        <evaluationMessage><![CDATA[]]></evaluationMessage>
                  </expectation>
                <expectation>
          <status>ignored</status>
          <instructionId>decisionTable_3_0/scriptTable_2_1</instructionId>
          <col>0</col>
          <row>2</row>
          <type>ScriptActionExpectation</type>
                    <actual><![CDATA[!error:The instance scriptTableActor.and. does not exist]]></actual>
                              <expected><![CDATA[and]]></expected>
                              <evaluationMessage><![CDATA[and error(The instance scriptTableActor.and. does not exist)]]></evaluationMessage>
                  </expectation>
        
      </instructionResult>
            <instructionResult>
        <instruction><![CDATA[[decisionTable_3_0/scriptTable_2_2, call, scriptTableActor, when, the find devices request is received]]]></instruction>
        <slimResult><![CDATA[!error:The instance scriptTableActor.when. does not exist]]></slimResult>
                <expectation>
          <status>ignored</status>
          <instructionId>decisionTable_3_0/scriptTable_2_2</instructionId>
          <col>1</col>
          <row>3</row>
          <type>ArgumentExpectation</type>
                                        <evaluationMessage><![CDATA[]]></evaluationMessage>
                  </expectation>
                <expectation>
          <status>ignored</status>
          <instructionId>decisionTable_3_0/scriptTable_2_2</instructionId>
          <col>0</col>
          <row>3</row>
          <type>ScriptActionExpectation</type>
                    <actual><![CDATA[!error:The instance scriptTableActor.when. does not exist]]></actual>
                              <expected><![CDATA[when]]></expected>
                              <evaluationMessage><![CDATA[when error(The instance scriptTableActor.when. does not exist)]]></evaluationMessage>
                  </expectation>
        
      </instructionResult>
            <instructionResult>
        <instruction><![CDATA[[decisionTable_3_0/scriptTable_2_3, call, scriptTableActor, then, the find devices request should return a find devices response]]]></instruction>
        <slimResult><![CDATA[!error:The instance scriptTableActor.then. does not exist]]></slimResult>
                <expectation>
          <status>ignored</status>
          <instructionId>decisionTable_3_0/scriptTable_2_3</instructionId>
          <col>1</col>
          <row>4</row>
          <type>ArgumentExpectation</type>
                                        <evaluationMessage><![CDATA[]]></evaluationMessage>
                  </expectation>
                <expectation>
          <status>ignored</status>
          <instructionId>decisionTable_3_0/scriptTable_2_3</instructionId>
          <col>0</col>
          <row>4</row>
          <type>ScriptActionExpectation</type>
                    <actual><![CDATA[!error:The instance scriptTableActor.then. does not exist]]></actual>
                              <expected><![CDATA[then]]></expected>
                              <evaluationMessage><![CDATA[then error(The instance scriptTableActor.then. does not exist)]]></evaluationMessage>
                  </expectation>
        
      </instructionResult>
            <instructionResult>
        <instruction><![CDATA[[decisionTable_3_0/scriptTable_2_4, call, scriptTableActor, and, the find devices response should contain 1 device]]]></instruction>
        <slimResult><![CDATA[!error:The instance scriptTableActor.and. does not exist]]></slimResult>
                <expectation>
          <status>ignored</status>
          <instructionId>decisionTable_3_0/scriptTable_2_4</instructionId>
          <col>1</col>
          <row>5</row>
          <type>ArgumentExpectation</type>
                                        <evaluationMessage><![CDATA[]]></evaluationMessage>
                  </expectation>
                <expectation>
          <status>ignored</status>
          <instructionId>decisionTable_3_0/scriptTable_2_4</instructionId>
          <col>0</col>
          <row>5</row>
          <type>ScriptActionExpectation</type>
                    <actual><![CDATA[!error:The instance scriptTableActor.and. does not exist]]></actual>
                              <expected><![CDATA[and]]></expected>
                              <evaluationMessage><![CDATA[and error(The instance scriptTableActor.and. does not exist)]]></evaluationMessage>
                  </expectation>
        
      </instructionResult>
            <instructionResult>
        <instruction><![CDATA[[decisionTable_3_0/scriptTable_2_5, call, scriptTableActor, and, the device in the response matches device device1]]]></instruction>
        <slimResult><![CDATA[!error:The instance scriptTableActor.and. does not exist]]></slimResult>
                <expectation>
          <status>ignored</status>
          <instructionId>decisionTable_3_0/scriptTable_2_5</instructionId>
          <col>1</col>
          <row>6</row>
          <type>ArgumentExpectation</type>
                                        <evaluationMessage><![CDATA[]]></evaluationMessage>
                  </expectation>
                <expectation>
          <status>ignored</status>
          <instructionId>decisionTable_3_0/scriptTable_2_5</instructionId>
          <col>0</col>
          <row>6</row>
          <type>ScriptActionExpectation</type>
                    <actual><![CDATA[!error:The instance scriptTableActor.and. does not exist]]></actual>
                              <expected><![CDATA[and]]></expected>
                              <evaluationMessage><![CDATA[and error(The instance scriptTableActor.and. does not exist)]]></evaluationMessage>
                  </expectation>
        
      </instructionResult>
            <instructionResult>
        <instruction><![CDATA[[import_4_0, import, com.alliander.osgp.acceptancetests]]]></instruction>
        <slimResult><![CDATA[OK]]></slimResult>
        
      </instructionResult>
            <instructionResult>
        <instruction><![CDATA[[decisionTable_5_0, make, decisionTable_5, SpringContextClosure]]]></instruction>
        <slimResult><![CDATA[OK]]></slimResult>
                <expectation>
          <status>right</status>
          <instructionId>decisionTable_5_0</instructionId>
          <col>0</col>
          <row>0</row>
          <type>ConstructionExpectation</type>
                    <actual><![CDATA[OK]]></actual>
                              <expected><![CDATA[spring context closure]]></expected>
                              <evaluationMessage><![CDATA[pass(spring context closure)]]></evaluationMessage>
                  </expectation>
        
      </instructionResult>
            <instructionResult>
        <instruction><![CDATA[[decisionTable_5_1, call, decisionTable_5, table, []]]]></instruction>
        <slimResult><![CDATA[__EXCEPTION__:fitnesse.slim.SlimError: message:<<NO_METHOD_IN_CLASS table[1] com.alliander.osgp.acceptancetests.SpringContextClosure.>>
	at fitnesse.slim.MethodExecutionResult$NoMethod.returnValue(MethodExecutionResult.java:29)
	at fitnesse.slim.StatementExecutor.call(StatementExecutor.java:207)
	at fitnesse.slim.Statement.callMethodAtIndex(Statement.java:104)
	at fitnesse.slim.Statement.call(Statement.java:97)
	at fitnesse.slim.Statement.execute(Statement.java:77)
	at fitnesse.slim.ListExecutor$Executive.executeStatement(ListExecutor.java:44)
	at fitnesse.slim.ListExecutor$Executive.executeStatements(ListExecutor.java:39)
	at fitnesse.slim.ListExecutor.execute(ListExecutor.java:71)
	at fitnesse.slim.SlimServer.executeInstructions(SlimServer.java:81)
	at fitnesse.slim.SlimServer.processTheInstructions(SlimServer.java:73)
	at fitnesse.slim.SlimServer.processOneSetOfInstructions(SlimServer.java:57)
	at fitnesse.slim.SlimServer.tryProcessInstructions(SlimServer.java:43)
	at fitnesse.slim.SlimServer.serve(SlimServer.java:30)
	at fitnesse.socketservice.SocketService$ServerRunner.run(SocketService.java:109)
	at java.lang.Thread.run(Unknown Source)
]]></slimResult>
        
      </instructionResult>
      
    </instructions>
    
  </result>
  
    <finalCounts>
    <right>0</right>
    <wrong>0</wrong>
    <ignores>0</ignores>
    <exceptions>0</exceptions>
  </finalCounts>
  <totalRunTimeInMillis>0</totalRunTimeInMillis>
  
</testResults>

