<!-- Copyright 2016 Smart Society Services B.V. Licensed under the Apache 
  License, Version 2.0 (the "License"); you may not use this file except in 
  compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.alliander</groupId>
  <artifactId>cucumber-tests-platform</artifactId>
  <packaging>jar</packaging>
  <name>cucumber-tests-platform</name>

  <parent>
    <groupId>com.alliander.osgp</groupId>
    <artifactId>parent-integration-tests</artifactId>
    <version>4.4.0-SNAPSHOT</version>
    <relativePath>../parent-integration-tests/pom.xml</relativePath>
  </parent>

  <dependencies>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>log4j-over-slf4j</artifactId>
    </dependency>
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
    </dependency>
    <dependency>
      <groupId>com.smartbear.soapui</groupId>
      <artifactId>soapui-maven-plugin</artifactId>
    </dependency>
    <dependency>
      <groupId>jgoodies</groupId>
      <artifactId>forms</artifactId>
    </dependency>

    <!-- Cucumber Framework -->
    <dependency>
      <groupId>info.cukes</groupId>
      <artifactId>cucumber-junit</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>info.cukes</groupId>
      <artifactId>cucumber-java</artifactId>
    </dependency>
    <dependency>
      <groupId>info.cukes</groupId>
      <artifactId>cucumber-spring</artifactId>
      <scope>test</scope>
    </dependency>

    <!-- Spring Framework -->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-test</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-beans</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-core</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-context</artifactId>
    </dependency>

    <!-- Spring Data -->
    <dependency>
      <groupId>org.springframework.data</groupId>
      <artifactId>spring-data-jpa</artifactId>
    </dependency>

    <!-- Spring WS -->
    <dependency>
      <groupId>org.springframework.ws</groupId>
      <artifactId>spring-ws-core</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.security</groupId>
      <artifactId>spring-security-web</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.ws</groupId>
      <artifactId>spring-ws-support</artifactId>
    </dependency>

    <dependency>
      <groupId>org.hibernate.javax.persistence</groupId>
      <artifactId>hibernate-jpa-2.0-api</artifactId>
    </dependency>

    <dependency>
      <groupId>org.postgresql</groupId>
      <artifactId>postgresql</artifactId>
      <scope>provided</scope>
    </dependency>

    <!-- OSGP -->
    <dependency>
      <groupId>com.alliander.osgp</groupId>
      <artifactId>osgp-adapter-ws-smartmetering</artifactId>
      <classifier>classes</classifier>
    </dependency>

    <dependency>
      <groupId>org.osgp</groupId>
      <artifactId>osgp-protocol-adapter-dlms</artifactId>
      <classifier>classes</classifier>
    </dependency>
    <dependency>
      <groupId>com.alliander.osgp</groupId>
      <artifactId>osgp-protocol-adapter-oslp</artifactId>
      <classifier>classes</classifier>
    </dependency>

    <dependency>
      <groupId>com.alliander.osgp</groupId>
      <artifactId>osgp-domain-microgrids</artifactId>
    </dependency>
    <dependency>
      <groupId>com.alliander.osgp</groupId>
      <artifactId>osgp-adapter-domain-microgrids</artifactId>
      <classifier>classes</classifier>
    </dependency>
    <dependency>
      <groupId>com.alliander.osgp</groupId>
      <artifactId>osgp-adapter-ws-admin</artifactId>
      <classifier>classes</classifier>
    </dependency>
    <dependency>
      <groupId>com.alliander.osgp</groupId>
      <artifactId>osgp-adapter-ws-core</artifactId>
      <classifier>classes</classifier>
    </dependency>
    <dependency>
      <groupId>com.alliander.osgp</groupId>
      <artifactId>osgp-adapter-ws-microgrids</artifactId>
      <classifier>classes</classifier>
    </dependency>
    <dependency>
      <groupId>com.alliander.osgp</groupId>
      <artifactId>osgp-protocol-simulator-iec61850</artifactId>
      <exclusions>
        <exclusion>
          <groupId>org.openmuc</groupId>
          <artifactId>jasn1</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <!--
        Projects osgp-protocol-simulator-iec61850 and osgp-protocol-adapter-dlms
        have different versions of the transient dependency to JASN1 (1.5.0 and
        1.6.0 respectively). Make sure 1.5.0 is used for the IEC61850 simulator.
    -->
    <dependency>
      <groupId>org.openmuc</groupId>
      <artifactId>jasn1</artifactId>
      <version>1.5.0</version>
    </dependency>

    <dependency>
      <groupId>com.alliander.osgp</groupId>
      <artifactId>osgp-domain-logging</artifactId>
    </dependency>

    <dependency>
      <groupId>com.alliander.osgp</groupId>
      <artifactId>osgp-adapter-ws-shared-db</artifactId>
    </dependency>
    <dependency>
      <groupId>com.alliander.osgp</groupId>
      <artifactId>oslp</artifactId>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <executions>
          <!-- Prepares the property pointing to the JaCoCo runtime agent which 
            is passed as VM argument when Maven the Surefire plugin is executed. -->
          <execution>
            <id>pre-unit-test</id>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
            <configuration>
              <!-- Sets the path to the file which contains the execution data. -->
              <destFile>${project.build.directory}/coverage-reports/jacoco-ut.exec</destFile>
              <!-- Sets the name of the property containing the settings for JaCoCo 
                runtime agent. -->
              <propertyName>surefireArgLine</propertyName>
            </configuration>
          </execution>
          <execution>
            <id>default-report</id>
            <phase>verify</phase>
            <goals>
              <goal>report</goal>
            </goals>
            <configuration>
              <!-- Sets the path to the file which contains the execution data. -->
              <dataFile>${project.build.directory}/coverage-reports/jacoco-ut.exec</dataFile>
              <!-- Sets the output directory for the code coverage report. -->
              <outputDirectory>${project.reporting.outputDirectory}/jacoco-ut</outputDirectory>
            </configuration>
          </execution>
          <!-- Ensures that the code coverage report for unit tests is created 
            after unit tests have been run. -->
          <execution>
            <id>post-unit-test</id>
            <phase>test</phase>
            <goals>
              <goal>report</goal>
            </goals>
            <configuration>
              <!-- Sets the path to the file which contains the execution data. -->
              <dataFile>${project.build.directory}/coverage-reports/jacoco-ut.exec</dataFile>
              <!-- Sets the output directory for the code coverage report. -->
              <outputDirectory>${project.reporting.outputDirectory}/jacoco-ut</outputDirectory>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <executions>
          <execution>
            <goals>
              <goal>test-jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>com.smartbear.soapui</groupId>
        <artifactId>soapui-maven-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <argLine>${surefireArgLine}</argLine>
          <excludes>
            <!-- Cucumber integration tests, included with Failsafe. -->
            <exclude>**/cucumber/AcceptanceTests.java</exclude>
          </excludes>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
        <executions>
          <execution>
            <id>integration-test</id>
            <goals>
              <goal>integration-test</goal>
              <goal>verify</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <skipITs>${skipITs}</skipITs>
          <includes>
            <!-- Cucumber integration tests, excluded with Surefire. -->
            <include>**/cucumber/AcceptanceTests.java</include>
          </includes>
        </configuration>
      </plugin>
    </plugins>
  </build>

</project>
