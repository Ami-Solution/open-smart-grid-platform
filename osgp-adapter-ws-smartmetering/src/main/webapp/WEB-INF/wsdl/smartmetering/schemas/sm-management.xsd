<!--

    Copyright 2015 Smart Society Services B.V.

    Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License.  You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

-->
<xsd:schema 
	xmlns:xsd="http://www.w3.org/2001/XMLSchema" 
	xmlns:common="http://www.alliander.com/schemas/osgp/common/2014/10"			
	xmlns:tns="http://www.alliander.com/schemas/osgp/smartmetering/sm-management/2014/10"
	attributeFormDefault="unqualified"
	elementFormDefault="qualified"
	targetNamespace="http://www.alliander.com/schemas/osgp/smartmetering/sm-management/2014/10">
	
	<xsd:import 
		namespace="http://www.alliander.com/schemas/osgp/common/2014/10" 
		schemaLocation="common.xsd" />

	<!-- Requests and Responses -->

	<xsd:element name="FindEventsRequest">
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element name="DeviceIdentification" type="common:DeviceIdentification" minOccurs="1"	maxOccurs="1" />
				<xsd:element name="FindEventsQuery" type="tns:FindEventsQuery" minOccurs="1" maxOccurs="unbounded" />
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	
	<xsd:element name="FindEventsAsyncResponse">
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element name="AsyncResponse" type="common:AsyncResponse" />
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	
	<xsd:element name="FindEventsAsyncRequest">
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element name="AsyncRequest" type="common:AsyncRequest" />
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	
	<xsd:element name="FindEventsResponse">
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element name="Events" type="tns:Event" maxOccurs="unbounded" />
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	
	<!-- Data Types -->	
	
	<!-- Query for FindEventsRequest -->
	<xsd:complexType name="FindEventsQuery">
		<xsd:complexContent>			
			<xsd:extension base="common:Query">
				<xsd:sequence>
					<xsd:element name="EventLogCategory" type="tns:EventLogCategory" minOccurs="1" maxOccurs="1" />
					<xsd:element name="From" type="xsd:dateTime" minOccurs="1" maxOccurs="1" />
					<xsd:element name="Until" type="xsd:dateTime" minOccurs="1" maxOccurs="1" />
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	
	<!-- Event containing Timestamp and EventType -->
	<xsd:complexType name="Event">
		<xsd:sequence>
			<xsd:element name="timestamp" type="xsd:dateTime" minOccurs="1" maxOccurs="1" />
			<xsd:element name="eventType" type="tns:EventType" minOccurs="1" maxOccurs="1" />
		</xsd:sequence>
	</xsd:complexType>
	
	<!-- Event Log Categories -->
	<xsd:simpleType name="EventLogCategory">
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="STANDARD_EVENT_LOG" />		
			<xsd:enumeration value="FRAUD_DETECTION_LOG" />		
			<xsd:enumeration value="COMMUNICATION_SESSION_LOG" />		
			<xsd:enumeration value="M_BUS_EVENT_LOG" />			
		</xsd:restriction>
	</xsd:simpleType>
	
	<!-- Standard Event Log Event Types -->
	<xsd:simpleType name="EventType">
		<xsd:restriction base="xsd:string">
			<!-- 255 - Event Log Cleared -->
			<xsd:enumeration value="EVENTLOG_CLEARED" />
			<!-- 1 - Power Down -->
			<xsd:enumeration value="POWER_FAILURE" />
			<!-- 2 - Power Up -->
			<xsd:enumeration value="POWER_RETURNED" />
			<!-- 3 - Daylight Saving Time Enabled or Disabled -->
			<xsd:enumeration value="CLOCK_UPDATE" />
			<!-- 4 - Clock Adjusted (old date/time) -->
			<xsd:enumeration value="CLOCK_ADJUSTED_OLD_TIME" />
			<!-- 5 - Clock Adjusted (new date/time) -->
			<xsd:enumeration value="CLOCK_ADJUSTED_NEW_TIME" />
			<!-- 6 - Clock Invalid -->
			<xsd:enumeration value="CLOCK_INVALID" />
			<!-- 7 - Replace Battery -->
			<xsd:enumeration value="REPLACE_BATTERY" />
			<!-- 8 - Battery Voltage Low -->
			<xsd:enumeration value="BATTERY_VOLTAGE_LOW" />
			<!-- 9 - Tariff Shift Times (TOU) Activated -->
			<xsd:enumeration value="TARIFF_ACTIVATED" />
			<!-- 10 - Error Register Cleared -->
			<xsd:enumeration value="ERROR_REGISTER_CLEARED" />
			<!-- 11 - Alarm Register Cleared -->
			<xsd:enumeration value="ALARM_REGISTER_CLEARED" />			
			<!-- NOTE: 12, 13, 14 and 16 are mapped to unique enum members instead of mapped to HARDWARE_ERROR -->
			<!-- 12 - Program Memory Error -->
			<!-- 13 - RAM Error -->
			<!-- 14 - NV Memory Error -->
			<!-- 16 - Measurement System Error -->
<!-- 			<xsd:enumeration value="HARDWARE_ERROR" /> -->
			<!-- 12 - Program Memory Error -->
			<xsd:enumeration value="HARDWARE_ERROR_PROGRAM_MEMORY" />
			<!-- 13 - RAM Error -->
			<xsd:enumeration value="HARDWARE_ERROR_RAM" />
			<!-- 14 - NV Memory Error -->
			<xsd:enumeration value="HARDWARE_ERROR_NV_MEMORY" />
			<!-- 15 - Watchdog Error -->
			<xsd:enumeration value="WATCHDOG_ERROR" />
			<!-- 16 - Measurement System Error -->
			<xsd:enumeration value="HARDWARE_ERROR_MEASUREMENT_SYSTEM" />
			<!-- 17 - Firmware Ready for Activation -->
			<xsd:enumeration value="FIRMWARE_READY_FOR_ACTIVATION" />
			<!-- 18 - Firmware Activated -->
			<xsd:enumeration value="FIRMWARE_ACTIVATED" />
			<!-- 19 - Tariff Shift Time (TOU) -->
			<xsd:enumeration value="PASSIVE_TARIFF_UPDATED" />
			<!-- 20 - Successful Selfcheck after Firmware Update -->
			<xsd:enumeration value="SUCCESSFUL_SELFCHECK_AFTER_FIRMWARE_UPDATE" />
		</xsd:restriction>
	</xsd:simpleType>
		
	<!-- Requests and Responses -->
	
	<xsd:element name="GetDevicesRequest">
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element name="Page" type="xsd:int" />
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	
	<xsd:element name="GetDevicesResponse">
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element name="DevicePage" type="tns:DevicePage" />
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	
	<!-- Data Types -->
	
	<xsd:complexType name="Device">
		<xsd:sequence>
			<xsd:element name="DeviceUid" type="xsd:string" />
			<xsd:element name="DeviceIdentification" type="common:Identification" />
			<xsd:element name="DeviceType" type="xsd:string" />
			<xsd:element name="Activated" type="xsd:boolean" />
			<xsd:element name="HasSchedule" type="xsd:boolean" />
            <xsd:element name="PublicKeyPresent" type="xsd:boolean" />
		</xsd:sequence>
	</xsd:complexType>
	
	<xsd:complexType name="DevicePage">
		<xsd:sequence>
			<xsd:element name="TotalPages" type="xsd:int" />
			<xsd:element maxOccurs="unbounded" name="Devices" type="tns:Device" />
		</xsd:sequence>
	</xsd:complexType>

</xsd:schema>